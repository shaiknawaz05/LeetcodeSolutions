class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        ans, l, r, pos = 0, 0, 0, [-1] * 256  
        while(r < len(s)):
            c = ord(s[r])
            l = max(l, pos[c] + 1) 
            pos[c] = r  
            r += 1
            ans = max(ans, r - l)
        return ans
        
        
#Runtime: 68 ms, faster than 52.29% of Python3 online submissions for Longest Substring Without Repeating Characters.
#Memory Usage: 14.5 MB, less than 6.82% of Python3 online submissions for Longest Substring Without Repeating Characters.        
